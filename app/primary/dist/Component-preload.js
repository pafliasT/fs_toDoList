//@ui5-bundle com/todolist/primary/Component-preload.js
jQuery.sap.registerPreloadedModules({
"version":"2.0",
"modules":{
	"com/todolist/primary/Component.js":function(){sap.ui.define(["sap/ui/core/UIComponent","sap/ui/Device","com/todolist/primary/model/models"],function(e,t,i){"use strict";return e.extend("com.todolist.primary.Component",{metadata:{manifest:"json"},init:function(){e.prototype.init.apply(this,arguments);this.getRouter().initialize();this.setModel(i.createDeviceModel(),"device")}})});
},
	"com/todolist/primary/controller/App.controller.js":function(){sap.ui.define(["sap/ui/core/mvc/Controller"],function(o){"use strict";return o.extend("com.todolist.primary.controller.App",{onInit(){}})});
},
	"com/todolist/primary/controller/Main.controller.js":function(){sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageToast","sap/m/MessageBox","sap/ui/model/json/JSONModel","sap/ui/model/Sorter","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/m/ColumnListItem","sap/m/Text","sap/m/Input","sap/m/Button","sap/m/CheckBox"],function(t,e,o,s,i,n,d,r,c,l,a,p){"use strict";return t.extend("com.todolist.primary.controller.Main",{onInit:function(){const t=new s({selectedTodoList:null,mode:"HideMode"});this.getView().setModel(t,"state");this.updateTodoListStatistics()},onSelectTodoList:function(t){const e=t.getSource().getBindingContext().getProperty("ID");console.log(e);this.selectTodoList(e)},onCreateTodoList:function(){const t="/todoapi/createTodoList";const s={ID:uuid.v4(),name:"New List"};axios.post(t,s).then(function(){e.show("Todo List created successfully!");this.byId("todolist-panel").getBinding("content").refresh();this.updateTodoListStatistics();console.log(s.ID);this.selectTodoList(s.ID);this.onStartEditTodoList()}.bind(this)).catch(function(t){const e=t&&t.responseJSON&&t.responseJSON.error?t.responseJSON.error.message:"An unexpected error occurred";o.error(e,{title:"Error Creating Todo List"})})},onStartEditTodoList:function(){const t=this.byId("todolist-title");const e=this.byId("todolist-title-input");t.setVisible(false);e.setVisible(true);e.attachChange(this.onInputChange,this);setTimeout(function(){const t=e.getDomRef("inner");if(t&&t.select){t.select()}},0)},onInputChange:function(t){const e=t.getSource();const o=e.getValue();const s=this.byId("todolist-title");const i=this.byId("todolist-panel");s.setText(o);i.getBinding("content").refresh();this.updateTodoListStatistics();this.byId("todolist-title").setVisible(true);e.setVisible(false)},onFinishEditTodoList:function(){const t=this.byId("todolist-title");const e=this.byId("todolist-title-input");const o=this.byId("todolist-panel");t.setText(e.getValue());o.getBinding("content").refresh();this.updateTodoListStatistics();t.setVisible(true);e.setVisible(false)},onDeleteTodoList:function(){const t="/todoapi/deleteTodoList";const s={ID:this.getView().getModel("state").getProperty("/selectedTodoList")};axios.post(t,s).then(function(){e.show("Todo List deleted succesfully!");this.getView().getModel("state").setProperty("/selectedTodoList",null);this.byId("todolist-panel").getBinding("content").refresh();this.updateTodoListStatistics()}.bind(this)).catch(function(t){console.log(t);const e=t&&t.responseJSON&&t.responseJSON.error?t.responseJSON.error.message:"An unexpected error occurred";o.error(e,{title:"Error Deleting Todo List"})})},onCreateTodoItem:function(){const t=this.getView().getModel("state").getProperty("/selectedTodoList");const s="/todoapi/createTodoItem";const i={ID:uuid.v4(),name:"New Item",todoList_ID:t};axios.post(s,i).then(function(){e.show("Todo Item created successfully!");this.displayTodoListItems(t);this.updateTodoListStatistics()}.bind(this)).catch(function(t){const e=t&&t.responseJSON&&t.responseJSON.error?t.responseJSON.error.message:"An unexpected error occurred";o.error(e,{title:"Error Creating Todo Item"})})},onStartEditTodoItem:function(t){const e=t.getSource().getParent();const o=e.getCells()[1];const s=new l({value:"{name}"});s.attachSubmit(null,this.onFinishEditTodoItem);e.removeCell(o);e.insertCell(s,1)},onFinishEditTodoItem:function(t){const e=t.getSource().getParent();const o=e.getCells()[1];const s=new c({text:"{name}"});e.removeCell(o);e.insertCell(s,1)},onDeleteTodoItem:function(t){const s=t.getSource().getBindingContext().getProperty("ID");const i=this.getView().getModel("state").getProperty("/selectedTodoList");const n="/todoapi/deleteTodoItem";const d={ID:s};axios.post(n,d).then(function(){e.show("Todo Item deleted succesfully!");this.displayTodoListItems(i);this.updateTodoListStatistics()}.bind(this)).catch(function(t){console.log(t);const e=t&&t.responseJSON&&t.responseJSON.error?t.responseJSON.error.message:"An unexpected error occurred";o.error(e,{title:"Error Deleting Todo Item"})})},bindTodoListNameToMasterTitle:function(t){const e=this.getView().byId("todolist-title");const o=this.getView().byId("todolist-title-input");e.bindElement({path:`/TodoList(${t})`});e.bindProperty("text",{path:`name`});o.bindElement({path:`/TodoList(${t})`});o.bindProperty("value",{path:`name`})},updateTodoListStatistics:function(){this.getOwnerComponent().getModel().bindList("/TodoItem").requestContexts().then(function(t){const e=t.map(t=>t.getObject());const o=new Map;for(const t of e){const e=o.get(t.todoList_ID)||{total:0,complete:0};e.total++;if(t.completed)e.complete++;o.set(t.todoList_ID,e)}const s=this.byId("todolist-panel").getAggregation("content");for(const t of s){const e=t.getBindingContext().getProperty("ID");const s=o.get(e)||{total:0,complete:0};t.getAggregation("tileContent")[0].getAggregation("content").setValue(`${s.complete}/${s.total}`)}}.bind(this))},displayTodoListItems:function(t){const e=this.getView().byId("todolist-items");e.bindAggregation("items",{path:"/TodoItem",sorter:new i("createdAt"),filters:new n("todoList_ID",d.EQ,t),template:new r({cells:[new p({selected:"{completed}",select:this.updateTodoListStatistics.bind(this)}),new c({text:"{name}"}),new a({icon:"sap-icon://edit",type:"Transparent",press:this.onStartEditTodoItem.bind(this)}),new a({icon:"sap-icon://delete",type:"Transparent",press:this.onDeleteTodoItem.bind(this)})]})})},selectTodoList:function(t){this.getView().getModel("state").setProperty("/selectedTodoList",t);this.bindTodoListNameToMasterTitle(t);this.displayTodoListItems(t)}})});
},
	"com/todolist/primary/i18n/i18n.properties":'# This is the resource bundle for com.todolist.primary\n\n#Texts for manifest.json\n\n#XTIT: Application name\nappTitle=Todo App\n\n#YDES: Application description\nappDescription=\n#XTIT: Main view title\ntitle=Todo App',
	"com/todolist/primary/manifest.json":'{"_version":"1.49.0","sap.app":{"id":"com.todolist.primary","type":"application","i18n":"i18n/i18n.properties","applicationVersion":{"version":"0.0.1"},"title":"{{appTitle}}","description":"{{appDescription}}","resources":"resources.json","sourceTemplate":{"id":"@sap/generator-fiori:basic","version":"1.10.3","toolsId":"96406ceb-938d-4b03-99bb-ad2788152712"},"dataSources":{"mainService":{"uri":"todoapi/","type":"OData","settings":{"annotations":[],"localUri":"localService/metadata.xml","odataVersion":"4.0"}}}},"sap.ui":{"technology":"UI5","icons":{"icon":"","favIcon":"","phone":"","phone@2":"","tablet":"","tablet@2":""},"deviceTypes":{"desktop":true,"tablet":true,"phone":true}},"sap.ui5":{"flexEnabled":false,"dependencies":{"minUI5Version":"1.116.0","libs":{"sap.m":{},"sap.ui.core":{},"sap.f":{},"sap.suite.ui.generic.template":{},"sap.ui.comp":{},"sap.ui.generic.app":{},"sap.ui.table":{},"sap.ushell":{}}},"contentDensities":{"compact":true,"cozy":true},"models":{"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"com.todolist.primary.i18n.i18n"}},"":{"dataSource":"mainService","preload":true,"settings":{"synchronizationMode":"None","operationMode":"Server","autoExpandSelect":true,"earlyRequests":true}}},"resources":{"css":[{"uri":"css/style.css"}]},"routing":{"config":{"routerClass":"sap.m.routing.Router","viewType":"XML","async":true,"viewPath":"com.todolist.primary.view","controlAggregation":"pages","controlId":"app","clearControlAggregation":false},"routes":[{"name":"RouteMain","pattern":":?query:","target":["TargetMain"]}],"targets":{"TargetMain":{"viewType":"XML","transition":"slide","clearControlAggregation":false,"viewId":"Main","viewName":"Main"}}},"rootView":{"viewName":"com.todolist.primary.view.App","type":"XML","async":true,"id":"App"}}}',
	"com/todolist/primary/model/models.js":function(){sap.ui.define(["sap/ui/model/json/JSONModel","sap/ui/Device"],function(e,n){"use strict";return{createDeviceModel:function(){var i=new e(n);i.setDefaultBindingMode("OneWay");return i}}});
},
	"com/todolist/primary/view/App.view.xml":'<mvc:View controllerName="com.todolist.primary.controller.App"\n    xmlns:html="http://www.w3.org/1999/xhtml"\n    xmlns:mvc="sap.ui.core.mvc" displayBlock="true"\n    xmlns="sap.m"><App id="app"></App></mvc:View>\n',
	"com/todolist/primary/view/Main.view.xml":'<mvc:View controllerName="com.todolist.primary.controller.Main"\n    xmlns:mvc="sap.ui.core.mvc" displayBlock="true"\n    xmlns="sap.m"><Page id="page" showHeader="false"><content><SplitContainer mode="{= ${state>/selectedTodoList} ? \'ShowHideMode\' : \'HideMode\' }" ><masterPages><Page backgroundDesign="List" showHeader="true"><customHeader><OverflowToolbar><Title id="todolist-title" text="List Details" visible="true" /><Input id="todolist-title-input" value="List Details" placeholder="List Details" width="80%" visible="false" submit=".onFinishEditTodoList" /><ToolbarSpacer /><Button text="New Todo" icon="sap-icon://add" type="Transparent" press=".onCreateTodoItem" /><OverflowToolbarButton text="Edit Todo List" icon="sap-icon://edit" type="Transparent" press=".onStartEditTodoList" ><layoutData><OverflowToolbarLayoutData priority="AlwaysOverflow" /></layoutData></OverflowToolbarButton><OverflowToolbarButton text="Delete Todo List" icon="sap-icon://delete" type="Transparent" press=".onDeleteTodoList" ><layoutData><OverflowToolbarLayoutData priority="AlwaysOverflow" /></layoutData></OverflowToolbarButton></OverflowToolbar></customHeader><Table id="todolist-items"><columns><Column width="3rem" /><Column/><Column width="2.6rem" hAlign="End"/><Column width="2.7rem" hAlign="End"/></columns><items/></Table></Page></masterPages><detailPages><Page showHeader="false"><Button text="New List" icon="sap-icon://add" type="Emphasized" class="sapUiMediumMarginBegin sapUiTinyMarginTop" press=".onCreateTodoList" /><Panel id="todolist-panel" content="{\n                            path: \'/TodoList\',\n                            sorter: {\n                                path: \'createdAt\'\n                            }\n                        }" backgroundDesign="Transparent"><content><GenericTile header="{name}" class="sapUiSmallMargin" press=".onSelectTodoList"><TileContent footer="Complete"><NumericContent value="3/6" icon="sap-icon://activity-items" withMargin="false" /></TileContent></GenericTile></content></Panel></Page></detailPages></SplitContainer></content></Page></mvc:View>'
}});
